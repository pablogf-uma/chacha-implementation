# -*- MakeFile -*-

# Detect the Operating System
ifeq ($(OS),Windows_NT)
    DEL = cmd /C del /Q
else
    DEL = rm -f
endif

CC = gcc # Compiler used
CFLAGS = -O3 -Wall -c # Flags used to create each .o file, with minimum optimization level (the optimal after trying all options)

TARGET = chacha20 # This is the final executable file
OBJS = chacha20.o quarter_round.o state_init.o permute_state.o encrypt.o run_encrypt_test.o \
		 calculate_throughput.o decrypt.o run_decrypt_test.o encrypt_custom_input.o decrypt_custom_input.o # These are all the .o files required to generate the executable

# Using the previous variables, create the prompts
# For variable substituiton within the makefile put them inside $(here) 

# Create executable
$(TARGET): $(OBJS)
	$(CC) $(OBJS) -O3 -Wall -o $(TARGET)

# Create all .o files
chacha20.o: chacha20.c
	$(CC) $(CFLAGS) chacha20.c

quarter_round.o: quarter_round.c
	$(CC) $(CFLAGS) quarter_round.c

state_init.o: state_init.c
	$(CC) $(CFLAGS) state_init.c

permute_state.o: permute_state.c
	$(CC) $(CFLAGS) permute_state.c

encrypt.o: encrypt.c
	$(CC) $(CFLAGS) encrypt.c

run_encrypt_test.o: run_encrypt_test.c
	$(CC) $(CFLAGS) run_encrypt_test.c

calculate_throughput.o: calculate_throughput.c
	$(CC) $(CFLAGS) calculate_throughput.c

decrypt.o: decrypt.c
	$(CC) $(CFLAGS) decrypt.c

run_decrypt_test.o: run_decrypt_test.c
	$(CC) $(CFLAGS) run_decrypt_test.c

encrypt_custom_input.o: encrypt_custom_input.c
	$(CC) $(CFLAGS) encrypt_custom_input.c

decrypt_custom_input.o: decrypt_custom_input.c
	$(CC) $(CFLAGS) decrypt_custom_input.c

clean: # Used to remove all files generated by the build process.
	$(DEL) $(TARGET) $(OBJS) chacha20.exe

.PHONY: clean # This tells make that clean is not a file, but a command.make 
